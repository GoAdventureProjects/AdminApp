
@{
    ViewBag.Title = "Transactions";
}

<style type="text/css">

    .card {
        width: 100%;
    }
</style>


@section page_header{
    <div class="container-fluid">
        <h2 class="no-margin-bottom">Transactions</h2>
    </div>
}

        <div class="container-fluid" id="maindiv">
            <div class="row">

                <div class="card">
                    <div class="card-header d-flex align-items-center">
                        <h3 class="h4">Transaction History</h3>
                    </div>
                    <div class="card-body" style="max-height:450px;overflow-y:scroll">

                        <!-- add new transaction-->
                        <div class="row">
                            <div class="form-group col-md-2">
                                <label>Amount</label>
                                <input id="txtAmount" type="number" placeholder="Amount" class="form-control">
                            </div>
                            <div class="form-group col-md-3">
                                <label>Date</label>
                                <input id="txtDateTime" type="date"  class="form-control">
                            </div>
                            <div class="form-group col-md-2">
                                <label>Transaction ID</label>
                                <input id="txtTransactionId" type="text" placeholder="transaction id" class="form-control">
                            </div>
                            <div class="form-group col-md-3">
                                <label>Notes</label>
                                <input id="txtStayNotes" type="text" placeholder="additional information" class="form-control">
                            </div>
                            <div class="form-group col-md-3">
                                <input type="button" class="btn btn-primary" value="Save" v-on:click="saveTransaction()"/>
                            </div>
                        </div>


                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Transferred</th>
                                        <th>Balance</th>
                                        <th>Recepient</th>
                                        <th>TransacrionId</th>
                                        <th>Notes</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="item in transactionsHistory">
                                        <td> {{ item.TransactionDate }} </td>
                                        <td> {{ item.TransferedAmount }} </td>
                                        <td> {{ item.BalanceAmount }} </td>
                                        <td> {{ item.Recepient }} </td>
                                        <td> {{ item.TransactionID }} </td>
                                        <td> {{ item.notes }} </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>


<script type="text/javascript">

    $(function () {

        var mainapp = new Vue({
            el: "#maindiv",
            data: {
                eventDatesId:0,
                ct: {
                    amount: 0,
                    date: new Date(),
                    transactionId: "",
                    notes: ""
                },
                transactionsHistory:[]
            },
            mounted: function () {
                debugger;
                var id = location.search.split("=")[1]; //assuming 1 param only
                this.eventDatesId = id;
                fetch("GetEventTransactions?eventDatesId=" + id)
                    .then(result => {
                        debugger;
                        return result.json();
                    })
                    .then(jsondata => {
                        debugger;
                        this.transactionsHistory = jsondata;
                    })
            },
            methods: {
                saveTransaction: function () {
                    var param = {

                    };
                    fetch("SaveTransaction?eventDatesId=" + this.eventDatesId, {
                        method: "POST",
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(param)
                    })
                }
            }
        })
    });

</script>